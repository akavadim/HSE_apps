install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
df<-xlsx("AppleStore.xlsx")
library(xlsx)
Sys.setenv(JAVA_HOME='C:\Program Files (x86)\Java\jre1.8.0_251')
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\Java\jre1.8.0_251')
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_251')
library(xlsx)
install.packages("xlsx")
install.packages("xlsx")
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_251')
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(xlsx)
library(xlsx)
detach("package:xlsx", unload = TRUE)
library(xlsx)
install.packages("xlsx")
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
detach("package:rJava", unload = TRUE)
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("rJava")
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_251')
library(rJava)
install.packages("openxlsx")
library(openxlsx)
df<-read.xlsx("AppleStore.xlsx")
df<-read.xlsx("AppleStore.xlsx")
View(df)
View(df)
#2
df2<-df[,c(2:3, 4:8)]
View(df2)
View(df2)
View(df2)
View(df2)
#2
df2<-df[,c(2:3, 5:9)]
#3
str(df2)
#4
sum(df$price)
sum(df$user_rating)
sum(df$lang_num)
sum(df$size_bytes)
#5
df[df$lang_num==max(df$lang_num)]
#2
df2<-df[c(2:3, 5:9)]
#5
subset(df, df$lang_num==max(df$lang_num))
#5
subset(df, df$lang_num==max(df$lang_num))$Name
#5
subset(df, df$lang_num==max(df$lang_num))$name
#1
install.packages("openxlsx")
library(openxlsx)
df<-read.xlsx("AppleStore.xlsx")
#2
df2<-df[c(2:3, 5:9)]
#3
str(df2)
#4
sum(df$price)
sum(df$user_rating)
sum(df$lang_num)
sum(df$size_bytes)
#5
subset(df, df$lang_num==max(df$lang_num))$name
#6
quantile(df$price)
quantile(df$user_rating)
quantile(*df$lang_num)
quantile(df$lang_num)
#7
install.packages("moments")
library(moments)
library(openxlsx)
df<-read.xlsx("AppleStore.xlsx")
#2
df2<-df[c(2:3, 5:9)]
#9
pie(table(df$currency), main='122')
#9
pie(table(df$prime_genre), main='122')
#9
pie(table(df$name), main='122')
#9
pie(table(df$currency))
pie(table(df$prime_genre))
hist(df$lang_num)
#10
hist(df$size_bytes)
hist(df$price)
hist(df$rating_count_tot)
hist(df$user_rating)
hist(df$lang_num)
#11
summary(df$prime_genre)
#11
df$prime_genre<-as.factor(df$prime_genre)
summary(df$prime_genre)
#12
df2<-subset(df2, df2$prime_genre==Games)
#12
df2<-subset(df2, df2$prime_genre=='Games')
View(df)
View(df)
View(df)
View(df2)
(df2$price)
sum(df2$price)
sum(df2$user_rating)
sum(df2$lang_num)
sum(df2$size_bytes)
ks.test(df2$price, mean_game, sd_game)
#13
mean_game<-mean(df2$price)
sd_game<-sd(df2$price)
ks.test(df2$price, mean_game, sd_game)
df<-subset(df, df$prime_genre!='Games')
mean_other<-mean(df$price)
sd_other<-sd(df$price)
ks.test(df$price, mean_other, sd_other)
df <- read.csv("https://raw.githubusercontent.com/allatambov/R-programming-3/master/seminars/sem8-09-02/demography.csv", encoding = "UTF-8")
View(df)
View(df)
#2
young_share<-sum(df$young_total)/sum(df$popul_total)*100
trud_share <-sum(df$wa_total)/sum(df$popul_total)*100
old_share <-sum(df$ret_total)/sum(df$popul_total)*100
library(openxlsx)
df<-read.xlsx("AppleStore.xlsx")
kurtosis(df$rating_count_tot)
#10
hist(df$size_bytes)
#3
install.packages("ggplot2")
library(ggplot2)
ggplot()
#3
install.packages("ggplot2")
#3
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
#1
df <- read.csv("https://raw.githubusercontent.com/allatambov/R-programming-3/master/seminars/sem8-09-02/demography.csv", encoding = "UTF-8")
ggplot()
ggplot(df, aes(df$wa_total/df$popul_total))
ggplot(df, aes(wa_total/popul_total))
ggplot(df, aes(wa_total/popul_total, c(0:100)))
ggplot(df, aes(wa_total/popul_total)+geom_histogram()
ggplot(df, aes(wa_total/popul_total))+geom_histogram()
ggplot(df, aes(wa_total/popul_total))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total))+geom_histogram()
ggplot(df, aes(y = wa_total/popul_total))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100, xlab='Процент трудоспособного населения'))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100, xlab="Процент трудоспособного населения"))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100, xlab = "Процент трудоспособного населения"))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100, xlab("Процент трудоспособного населения")))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100, xlab(Процент трудоспособного населения)))+geom_histogram()
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram() +labs(x="Процент трудоспособного населения")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, colour = cyl))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, colour = "Red"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, colour = "Red", fill="blue"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, colour = "Red", fill="Blue"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, colour = "Red"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, col = "Red"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, col = "Red"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, col = "blue"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100, colour = "blue"))+geom_histogram() +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(fill="read") +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(fill="red") +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(colour="black",fill="red") +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(colour="black",fill="white") +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(colour="black",fill="red") +labs(x="Процент трудоспособного населения, %")
white
library(ggplot2)
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(colour="black", fill="white") +labs(x="Процент трудоспособного населения, %")
ggplot(df, aes(x = wa_total/popul_total*100))+geom_histogram(colour="black", fill="white") +labs(x="Процент трудоспособного населения, %")+geom_rug()
plot1 <- qplot((df$wa_total / df$popul_total) * 100,
xlab ="Процент трудоспособного населения",
ylab ="Частота",
col=I("white"),
fill=I("blue"))
plot1 +
geom_vline(aes(xintercept=median((df$wa_total / df$popul_total) * 100)), color="white", linetype="dashed", size=1.5) +
geom_rug()
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(median(wa_total/popul_total*100))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(median(df$wa_total/df$popul_total*100))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(x = median(df$wa_total/df$popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(median(df$wa_total/df$popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(y = median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(x = median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(x = aes(median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(x = median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(y = median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_line(aes(y=0, x = median(wa_total/popul_total*100)))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(wa_total/popul_total*100))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(df$wa_total/df$popul_total*100))
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(df$wa_total/df$popul_total*100), color="red")
#4
d<-density(df$wa_total/df$popul_total*100)
plot(d)
polygon(d)
plot(d, xlim=c(60,100))
plot(d
plot(d
plot(d)
polygon(d, col="magenta")
#4
vioplot(df$wa_total/df$popul_total*100)
#4
ggplot(df, aes(x = wa_total/popul_total*100))+geom_violin()
#4
ggplot(data = df, aes(x = wa_total/popul_total*100, group = region, fill = activ)) +
geom_density(alpha = 0.5)
#4
ggplot(data = df, aes(x = wa_total/popul_total*100, group = region)) +
geom_density(alpha = 0.5)
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(df$wa_total/df$popul_total*100), color="red")
#4
ggplot(data = df, aes(x = wa_total/popul_total*100, group = region, )) +
geom_density(alpha = 0.5)
#1
install.packages("openxlsx")
library(openxlsx)
df<-read.xlsx("AppleStore.xlsx")
#2
df2<-df[c(2:3, 5:9)]
#2
df2<-df[-c(1, 4)]
View(df2)
View(df2)
#4
sum(df$price)
sum(df$user_rating)
sum(df$lang_num)
sum(df$size_bytes)
#10
hist(df$size_bytes)
hist(df$price)
hist(df$rating_count_tot)
hist(df$user_rating)
#10
hist(df$size_bytes)
#10
hist(df$size_bytes,freq=F)
#13
mean_game<-mean(df2$price)
sd_game<-sd(df2$price)
ks.test(df2$price, "pnorm", mean_game, sd_game)
shapiro.test(df$price)
#1
df <- read.csv("https://raw.githubusercontent.com/allatambov/R-programming-3/master/seminars/sem8-09-02/demography.csv", encoding = "UTF-8")
#2
young_share<-sum(df$young_total)/sum(df$popul_total)*100
trud_share <-sum(df$wa_total)/sum(df$popul_total)*100
old_share <-sum(df$ret_total)/sum(df$popul_total)*100
library(ggplot2)
#4
ggplot(data = df, aes(x = wa_total/popul_total*100, group = region, )) +
geom_density(alpha = 0.5)
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(df$wa_total/df$popul_total*100), color="red")
plot1 <- qplot((df$wa_total / df$popul_total) * 100,
xlab ="Процент трудоспособного населения",
ylab ="Частота",
col=I("white"),
fill=I("blue"))
plot1 +
geom_vline(aes(xintercept=median((df$wa_total / df$popul_total) * 100)), color="white", linetype="dashed", size=1.5) +
geom_rug()
ggplot(df, aes(x = wa_total/popul_total*100))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(df$wa_total/df$popul_total*100), color="red")
#4
ggplot(data = df, aes(x = wa_total/popul_total*100, group = region, fill=region)) +
geom_density(alpha = 0.5)
#4
ggplot(data = df, aes(x = wa_total/popul_total*100, group = region, fill=region)) +
geom_density(alpha = 0.5)
#1
install.packages("openxlsx")
library(openxlsx)
df<-read.xlsx("AppleStore.xlsx")
view(df)
View(df)
#2
df2<-df[-c(1, 4)]
View(df2)
#3
str(df2)
#4
summary(df$price)
summary(df$user_rating)
summary(df$lang_num)
summary(df$size_bytes)
#5
subset(df, df$lang_num==max(df$lang_num))$name
#6
quantile(df$price)
quantile(df$user_rating)
quantile(df$lang_num)
library(moments)
kurtosis(df$size_bytes)
kurtosis(df$price)
kurtosis(df$rating_count_tot)
kurtosis(df$user_rating)
kurtosis(df$lang_num)
skewness(df$size_bytes)
skewness(df$price)
skewness(df$rating_count_tot)
skewness(df$user_rating)
skewness(df$lang_num)
sd(df$size_bytes)/mean(df$size_bytes)
sd(df$price)/mean(df$price)
sd(df$rating_count_tot)/mean(df$rating_count_tot)
sd(df$user_rating)/mean(df$user_rating)
sd(df$lang_num)/mean(df$lang_num)
#8
boxplot(df$size_bytes, main='Размер приложения', xlab='Размер приложения, байты')
boxplot(df$price, main='Цена', xlab='Цена, USD')
boxplot(df$rating_count_tot, main='Количество оценок', xlab='Количество оценок')
boxplot(df$user_rating, main='Пользовательский рейтинг', xlab='Рейтинг')
boxplot(df$lang_num, main='Количество языков', xlab='Количество языков')
#8
boxplot(df$size_bytes, main='Размер приложения', xlab='Размер приложения, байты')
boxplot(df$price, main='Цена', xlab='Цена, USD')
skewness(df$price)
boxplot(df$rating_count_tot, main='Количество оценок', xlab='Количество оценок')
boxplot(df$user_rating, main='Пользовательский рейтинг', xlab='Рейтинг')
boxplot(df$lang_num, main='Количество языков', xlab='Количество языков')
#9
pie(table(df$currency))
pie(table(df$prime_genre))
#9
pie(table(df$currency))
pie(table(df$prime_genre))
#10
hist(df$size_bytes)
hist(df$price)
hist(df$rating_count_tot)
hist(df$user_rating)
hist(df$lang_num)
#11
df$prime_genre<-as.factor(df$prime_genre)
summary(df$prime_genre)
#12
df2<-subset(df2, df2$prime_genre=='Games')
sum(df2$price)
sum(df2$user_rating)
sum(df2$lang_num)
sum(df2$size_bytes)
#12
df2<-subset(df2, df2$prime_genre=='Games')
summary(df2$price)
summary(df2$user_rating)
summary(df2$lang_num)
summary(df2$size_bytes)
#13
mean_game<-mean(df2$price)
sd_game<-sd(df2$price)
ks.test(df2$price, "pnorm", mean_game, sd_game)
df<-subset(df, df$prime_genre!='Games')
mean_other<-mean(df$price)
sd_other<-sd(df$price)
ks.test(df$price, "pnorm", mean_other, sd_other)
#2
df<-transform(df, young_share = df$young_total/df$popul_total*100)
#2
df<-transform(df, young_share = young_total/popul_total*100)
#1
df <- read.csv("https://raw.githubusercontent.com/allatambov/R-programming-3/master/seminars/sem8-09-02/demography.csv", encoding = "UTF-8")
#2
df[["young_share"]]  <-df$young_total/df$popul_total*100
#2
df[["young_share"]]  <-df$young_total/df$popul_total*100
df[["trud_share"]]  <-df$wa_total/df$popul_total*100
df[["old_share"]]  <-df$ret_total/df$popul_total*100
View(df)
ggplot(df, aes(x = trud_share))+
geom_histogram(colour="black", fill="white") +
labs(x="Процент трудоспособного населения, %")+
geom_rug()+
geom_vline(xintercept= median(df$wa_total/df$popul_total*100), color="red")
#4
ggplot(data = df, aes(x = trud_share, group = region, fill=region)) +
geom_density(alpha = 0.5)
ggplot(data = df, aes(x = trud_share, group = region, fill=region)) +
geom_violin()
ggplot(data = df, aes(y = trud_share, group = region, fill=region)) +
geom_violin()
ggplot(data = df, aes(y="", x = trud_share, group = region, fill=region)) +
geom_violin()
ggplot(data = df, aes(x="", y = trud_share, group = region, fill=region)) +
geom_violin()
#5
ggplot(df, aes(young_share, old_share))+
geom_point(color="red", size=2)
#6
df[["male_share"]]<-(df$young_male+df$wa_male+df$ret_male)/df$popul_total
df[["male"]]<-factor(ifelse(df$male_shart>0.5),1,0)
df[["male"]]<-factor(ifelse(df$male_share>0.5),1,0)
df[["male"]]<-factor(ifelse(df$male_share>0.5,1,0))
#6
df[["male_share"]]<-(df$young_male+df$wa_male+df$ret_male)/df$popul_total
df[["male"]]<-factor(ifelse(df$male_share>0.5,1,0))
View(df)
#7
ggplot(df, aes(young_share,old_share ))+
geom_point(aes(size=male_share, color=male))
#8
ggplot(df, aes(x=region))+geom_bar()
df<-read.csv("train.csv")
df<-read.csv("Titanic.csv")
summary(df)
#2
ggplot(df, aes(Age))+
geom_histogram(color="black", fill="white")+
labs(title="Гистограмма для Age")
#3
boxplot(df, df$Age)
#3
boxplot(df$Age)
length(boxplot.stats(df$Age)$out)
