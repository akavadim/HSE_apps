version: "3"

services:
  # jobmanager:
  #   build: images/flink/ 
  #   expose:
  #     - "6123"
  #   ports:
  #     - "8081:8081"
  #   command: jobmanager
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=jobmanager
  #   volumes:
  #     - ./images/flink/src/:/app

  # taskmanager:
  #   build: images/flink/ 
  #   expose:
  #     - "6121"
  #     - "6122"
  #   depends_on:
  #     - jobmanager
  #   command: taskmanager
  #   links:
  #     - "jobmanager:jobmanager"
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=jobmanager
  #   volumes:
  #     - ./images/flink/src/:/app
      
  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: wurstmeister/kafka:2.12-2.2.1
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "Input:1:1, Output:1:1"
  #     #KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
  #   volumes:
  #     - ./images/producer/src/:/app


  # kafka-data-producer:
  #   build: images/producer/ 
  #   command: "python /app/Producer.py"
  #   depends_on: 
  #     - kafka
  #   volumes:
  #     - ./images/producer/src/:/app


  # kafka-data-producer:
  #   build: producer/
  #   command: "java -classpath /opt/data/data-producer.jar com.ververica.sql_training.data_producer.TaxiRecordProducer --input file /opt/data --output kafka kafka:9092 --speedup 10.0"
  #   depends_on:
  #     - kafka
  #     - jobmanager
  #   environment:
  #     FLINK_JOBMANAGER_HOST: jobmanager
  #     ZOOKEEPER_CONNECT: zookeeper
  #     KAFKA_BOOTSTRAP: kafka

  jobmanager:
    build: images/flink/ 
    ports: 
      - 8081:8081
    expose:
      - "6123"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./images/flink/src/:/app

  taskmanager:
    build: images/flink/ 
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "jobmanager:jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./images/flink/src/:/app

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    ports:
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
 
  kafka_data_consumer:
    build: images/consumer/ 
    command: "python /app/Consumer.py"
    depends_on: 
      - broker
    volumes:
      - ./images/consumer/src/:/app

  kafka_data_consumer2:
    build: images/consumer2/ 
    command: "python /app/Consumer2.py"
    depends_on: 
      - broker
    volumes:
      - ./images/consumer2/src/:/app

  kafka-data-producer:
    build: images/producer/ 
    command: "python /app/Producer.py"
    depends_on: 
      - broker
    volumes:
      - ./images/producer/src/:/app
# version: '3.5'

# networks: 
#   rmoff_kafka:
#     name: rmoff_kafka

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:3.4.6
#     container_name: zookeeper
#     networks: 
#       - rmoff_kafka
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181

#   broker:
#     image: wurstmeister/kafka:2.12-2.2.1
#     container_name: broker
#     networks: 
#       - rmoff_kafka
#     depends_on:
#       - zookeeper
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#   client:
#     build: images/producer/
#     container_name: python_kafka_test_client
#     depends_on: 
#       - broker
#     networks: 
#       - rmoff_kafka
#     entrypoint: 
#       - bash 
#       - -c 
#       - |
#         echo 'Giving Kafka a bit of time to start upâ€¦'
#         sleep 30
#         # Run the client code
#         python /app/Producer.py broker:9092


